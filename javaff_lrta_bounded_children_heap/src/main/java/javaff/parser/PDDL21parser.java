/* Generated By:JavaCC: Do not edit this line. PDDL21parser.java */
package javaff.parser;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javaff.data.Condition;
import javaff.data.Effect;
import javaff.data.GroundCondition;
import javaff.data.Literal;
import javaff.data.Metric;
import javaff.data.Parameter;
import javaff.data.Type;
import javaff.data.UngroundCondition;
import javaff.data.UngroundEffect;
import javaff.data.UngroundProblem;
import javaff.data.metric.BinaryComparator;
import javaff.data.metric.BinaryFunction;
import javaff.data.metric.Function;
import javaff.data.metric.FunctionSymbol;
import javaff.data.metric.MetricSymbolStore;
import javaff.data.metric.NamedFunction;
import javaff.data.metric.NumberFunction;
import javaff.data.metric.ResourceOperator;
import javaff.data.metric.TotalTimeFunction;
import javaff.data.strips.AND;
import javaff.data.strips.EitherType;
import javaff.data.strips.NOT;
import javaff.data.strips.NullEffect;
import javaff.data.strips.OperatorName;
import javaff.data.strips.PDDLObject;
import javaff.data.strips.Predicate;
import javaff.data.strips.PredicateSymbol;
import javaff.data.strips.Proposition;
import javaff.data.strips.SimpleType;
import javaff.data.strips.TrueCondition;
import javaff.data.strips.UngroundInstantAction;
import javaff.data.strips.Variable;
import javaff.data.temporal.DurationConstraint;
import javaff.data.temporal.SimpleDurationConstraint;
import javaff.data.temporal.UngroundDurativeAction;

import org.apache.log4j.Logger;

public class PDDL21parser implements PDDL21parserConstants {

	protected static UngroundProblem UP = new UngroundProblem();

	private static final Logger logger = Logger.getLogger(PDDL21parser.class);

	public static UngroundProblem parseFiles(File pDomainFile, File pProblemFile)
	{
		boolean probsuc = false;
		boolean suc = parseDomainFile(pDomainFile);

		if (suc) {
			probsuc = parseProblemFile(pProblemFile);
		}

		if (probsuc) {
			return UP;
		} else {
			return null;
		}
	}

	private static boolean parseDomainFile(File pFile)
	{
		boolean req = false;

		try {
			FileReader tFileReader = new FileReader(pFile);
			PDDL21parser parser = new PDDL21parser(tFileReader);
			req = parser.parseDomain();
			tFileReader.close();
		} catch (FileNotFoundException e) {
			logger.error(String.format("File [%s] has not been found", pFile));
			req = false;
		} catch (IOException e)	{
			logger.error("Unknown IOException caught");
			logger.error(e.getMessage(), e);
			req = false;
		} catch (ParseException e) {
			logger.error(String.format("Error whilst parsing file [%s].", pFile));
			logger.error(e.getMessage(), e);
			req = false;
		}

		if (req) {
			if (logger.isInfoEnabled()) {
				logger.info(String.format("Parsed Domain file [%s] successfully.", pFile));
			}
		} else {
			if (logger.isInfoEnabled()) {
				logger.info(String.format("Parsing of Domain file [%s] failed.", pFile));
			}
		}

		return req;
	}

	private static boolean parseProblemFile(File pFile)
	{
		boolean probsuc = true;

		try {
			FileReader tFileReader = new FileReader(pFile);
			PDDL21parser parser = new PDDL21parser(tFileReader);
			parser.parseProblem();
			tFileReader.close();
		} catch (FileNotFoundException e) {
			logger.error(String.format("File [%s] has not been found.", pFile));
			probsuc = false;
		} catch (IOException e) {
			logger.error("Unknown IOException caught.");
			logger.error(e.getMessage(), e);
			probsuc = false;
		} catch (ParseException e) {
			logger.error(String.format("Error whilst parsing file [%s].", pFile));
			logger.error(e.getMessage(), e);
			probsuc = false;
		}

		if (probsuc) {
			if (logger.isInfoEnabled()) {
				logger.info(String.format("Parsed Problem file [%s] successfully.", pFile));
			}
		} else {
			if (logger.isInfoEnabled()) {
				logger.info(String.format("Parsing Problem file [%s] failed.", pFile));
			}
		}

		return probsuc;
	}

	private class TypedList
	{
		public List objects = new ArrayList();
		public Map types = new Hashtable();    // Maps strings onto Types

		public void add(String s)
		{
			this.objects.add(s);
			this.types.put(s,SimpleType.rootType);
		}

		public void add(String s, Type t)
		{
			this.objects.add(s);
			this.types.put(s,t);
		}
	}

	// ******************************************************************************
	// *																			*
	// * 							Parse the Domain File							*
	// *																			*
	// ******************************************************************************
	final public boolean parseDomain() throws ParseException {
		Token t;
		boolean req = true;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(DEFINE);
		this.jj_consume_token(OPEN);
		this.jj_consume_token(DOMAIN);
		t = this.jj_consume_token(NAME);
		this.jj_consume_token(CLOSE);
		UP.DomainName = t.toString();
		if (this.jj_2_1(20)) {
			req = this.parseRequireDef();
		} else {
			;
		}
		if (!req) {if (true) return false;}
		if (this.jj_2_2(20)) {
			this.parseTypeDef();
		} else {
			;
		}
		if (this.jj_2_3(20)) {
			this.parseConstantsDef();
		} else {
			;
		}
		if (this.jj_2_4(20)) {
			this.parsePredicatesDef();
		} else {
			;
		}
		if (this.jj_2_5(20)) {
			this.parseFunctionsDef();
		} else {
			;
		}
		label_1:
			while (true) {
				if (this.jj_2_6(20)) {
					;
				} else {
					break label_1;
				}
				this.parseStructureDef();
			}
		this.jj_consume_token(CLOSE);
		this.jj_consume_token(0);
		{if (true) return true;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse the requirement definitions
	// ***************************************************
	final public boolean parseRequireDef() throws ParseException {
		Token t;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(REQUIREMENTS);
		label_2:
			while (true) {
				if (this.jj_2_7(20)) {
					;
				} else {
					break label_2;
				}

				if (this.jj_2_8(20)) {
					t = this.jj_consume_token(REQUIREMENT_LABELS);
					UP.requirements.add(t.toString());
				} else if (this.jj_2_9(20)) {
					t = this.jj_consume_token(NON_HANDLED_LABELS);

					logger.error(String.format("Cannnot parse [%s].", t.toString()));
					return false;
				} else {
					this.jj_consume_token(-1);
					throw new ParseException();
				}
			}
		this.jj_consume_token(CLOSE);
		{if (true) return true;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse the type definitions
	// ***************************************************
	final public void parseTypeDef() throws ParseException {
		Type t;
		Set types;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(TYPES);
		label_3:
			while (true) {
				if (this.jj_2_10(20)) {
					;
				} else {
					break label_3;
				}
				types = new HashSet();
				label_4:
					while (true) {
						t = this.parsePrimitiveType();
						types.add(t);
						if (this.jj_2_11(20)) {
							;
						} else {
							break label_4;
						}
					}
				this.jj_consume_token(TYPE_IDENT);
				t = this.parseType();
				Iterator tit = types.iterator();
				while (tit.hasNext())
				{
					SimpleType type = (SimpleType) tit.next();
					type.setSuperType(t);
				}
			}
		label_5:
			while (true) {
				if (this.jj_2_12(20)) {
					;
				} else {
					break label_5;
				}
				t = this.parsePrimitiveType();
			}
			this.jj_consume_token(CLOSE);
	}

	final public Type parseType() throws ParseException {
		Type t;
		if (this.jj_2_13(20)) {
			t = this.parsePrimitiveType();
		} else if (this.jj_2_14(20)) {
			t = this.parseEitherType();
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		{if (true) return t;}
		throw new Error("Missing return statement in function");
	}

	final public SimpleType parsePrimitiveType() throws ParseException {
		Token t;
		t = this.jj_consume_token(NAME);
		String typeStr = t.toString().toLowerCase();
		SimpleType type = (SimpleType) UP.typeMap.get(typeStr);
		if (type == null)
		{
			type = new SimpleType(typeStr);
			UP.types.add(type);
			UP.typeMap.put(typeStr, type);
		}
		{if (true) return type;}
		throw new Error("Missing return statement in function");
	}

	final public EitherType parseEitherType() throws ParseException {
		EitherType et = new EitherType();
		SimpleType st;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(EITHER);
		label_6:
			while (true) {
				st = this.parsePrimitiveType();
				et.addType(st);
				if (this.jj_2_15(20)) {
					;
				} else {
					break label_6;
				}
			}
		this.jj_consume_token(CLOSE);
		{if (true) return et;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse a TypedList
	// ***************************************************
	final public TypedList parseTypedList() throws ParseException {
		List strings = new ArrayList();
		Type type;
		Token t;
		TypedList rList = new TypedList();
		TypedList tList;
		if (this.jj_2_22(20)) {
			label_7:
				while (true) {
					if (this.jj_2_16(20)) {
						t = this.jj_consume_token(NAME);
					} else if (this.jj_2_17(20)) {
						t = this.jj_consume_token(VAR);
					} else {
						this.jj_consume_token(-1);
						throw new ParseException();
					}
					strings.add(t.toString());
					if (this.jj_2_18(20)) {
						;
					} else {
						break label_7;
					}
				}
		this.jj_consume_token(TYPE_IDENT);
		type = this.parseType();
		Iterator tit = strings.iterator();
		while (tit.hasNext())
		{
			String string = (String) tit.next();
			rList.add(string, type);
		}
		tList = this.parseTypedList();
		rList.objects.addAll(tList.objects);
		rList.types.putAll(tList.types);
		} else {
			label_8:
				while (true) {
					if (this.jj_2_19(20)) {
						;
					} else {
						break label_8;
					}
					if (this.jj_2_20(20)) {
						t = this.jj_consume_token(NAME);
					} else if (this.jj_2_21(20)) {
						t = this.jj_consume_token(VAR);
					} else {
						this.jj_consume_token(-1);
						throw new ParseException();
					}
					rList.add(t.toString());
				}
		}
		{if (true) return rList;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse the constants
	// ***************************************************
	final public void parseConstantsDef() throws ParseException {
		TypedList tl;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(CONSTANTS);
		tl = this.parseTypedList();
		this.jj_consume_token(CLOSE);
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			PDDLObject c =  new PDDLObject(str);
			c.setType((Type)tl.types.get(str));
			UP.constants.add(c);
			UP.constantMap.put(str, c);
		}
	}

	// ***************************************************
	// *	Parse the predicates
	// ***************************************************
	final public void parsePredicatesDef() throws ParseException {
		this.jj_consume_token(OPEN);
		this.jj_consume_token(PREDICATES);
		label_9:
			while (true) {
				this.parsePredicate();
				if (this.jj_2_23(20)) {
					;
				} else {
					break label_9;
				}
			}
		this.jj_consume_token(CLOSE);
	}

	final public void parsePredicate() throws ParseException {
		PredicateSymbol ps;
		TypedList tl;
		this.jj_consume_token(OPEN);
		ps = this.parsePredicateSymbol();
		tl = this.parseTypedList();
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			Variable v =  new Variable(str);
			v.setType((Type)tl.types.get(str));
			ps.addVar(v);
		}
		UP.predSymbols.add(ps);
		this.jj_consume_token(CLOSE);
	}

	final public PredicateSymbol parsePredicateSymbol() throws ParseException {
		Token t;
		t = this.jj_consume_token(NAME);
		PredicateSymbol ps = (PredicateSymbol) UP.predSymbolMap.get(t.toString());
		if (ps == null)
		{
			ps = new PredicateSymbol(t.toString());
			UP.predSymbolMap.put(t.toString(), ps);
		}
		{if (true) return ps;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse a STRIPS action
	// ***************************************************
	final public void parseStructureDef() throws ParseException {
		if (this.jj_2_24(20)) {
			this.parseActionDef();
		} else if (this.jj_2_25(20)) {
			this.parseDurActionDef();
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	final public void parseActionDef() throws ParseException {
		UngroundInstantAction a = new UngroundInstantAction();
		TypedList tl;
		Map varMap = new Hashtable();
		this.jj_consume_token(OPEN);
		this.jj_consume_token(ACTION);
		a.name = this.parseOperatorName();
		this.jj_consume_token(PARAMETERS);
		this.jj_consume_token(OPEN);
		tl = this.parseTypedList();
		this.jj_consume_token(CLOSE);
		UP.actions.add(a);
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			Variable v = new Variable(str);
			v.setType((Type) tl.types.get(str));
			a.params.add(v);
			varMap.put(str,v);
		}
		this.parseActionDefBody(a, varMap);
		this.jj_consume_token(CLOSE);
	}

	final public OperatorName parseOperatorName() throws ParseException {
		Token t;
		t = this.jj_consume_token(NAME);
		{if (true) return new OperatorName(t.toString());}
		throw new Error("Missing return statement in function");
	}

	final public void parseActionDefBody(UngroundInstantAction a, Map varMap) throws ParseException {
		Condition c;
		Effect e;
		if (this.jj_2_26(20)) {
			this.jj_consume_token(PRECONDITION);
			c = this.parseGD(varMap, false);
			a.condition = (UngroundCondition) c;
		} else {
			;
		}
		if (this.jj_2_27(20)) {
			this.jj_consume_token(EFFECT);
			e = this.parseEffect(varMap);
			a.effect = (UngroundEffect) e;
		} else {
			;
		}
	}

	// **********************************
	// *	Parse Goal Definition
	// **********************************

	// Map m is the variableMap
	// boolean ground is wheather it is ground or not (i.e. in an action or in the initial state)
	final public Condition parseGD(Map m, boolean ground) throws ParseException {
		Literal p;
		Condition c;
		AND and;
		if (this.jj_2_29(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(CLOSE);
			{if (true) return TrueCondition.getInstance();}
		} else if (this.jj_2_30(20)) {
			p = this.parseAtomicFormula(m, ground);
			{if (true) return p;}
		} else if (this.jj_2_31(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AND);
			and = new AND();
			label_10:
				while (true) {
					if (this.jj_2_28(20)) {
						;
					} else {
						break label_10;
					}
					c = this.parseGD(m, ground);
					and.add(c);
				}
			this.jj_consume_token(CLOSE);
			{if (true) return and;}
		} else if (this.jj_2_32(20)) {
			c = this.parseFComp(m);
			{if (true) return c;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	final public Literal parseAtomicFormula(Map m, boolean ground) throws ParseException {
		PredicateSymbol p;
		TypedList tl;
		this.jj_consume_token(OPEN);
		p = this.parsePredicateSymbol();
		tl = this.parseTypedList();
		this.jj_consume_token(CLOSE);
		Literal lit;
		if (ground) lit = new Proposition(p);
		else lit = new Predicate(p);
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			Parameter o = null;
			if (m != null) o = (Parameter) m.get(str);
			if (o == null) o = (Parameter) UP.constantMap.get(str);
			if (o == null) o = (Parameter) UP.objectMap.get(str);
			lit.addParameter(o);
		}
		{if (true) return lit;}
		throw new Error("Missing return statement in function");
	}

	// **********************************
	// *	Parse Effect
	// **********************************
	final public Effect parseEffect(Map m) throws ParseException {
		Effect c;
		AND and;
		if (this.jj_2_34(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(CLOSE);
			{if (true) return NullEffect.getInstance();}
		} else if (this.jj_2_35(20)) {
			c = this.parseCEffect(m);
			{if (true) return c;}
		} else if (this.jj_2_36(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AND);
			and = new AND();
			label_11:
				while (true) {
					if (this.jj_2_33(20)) {
						;
					} else {
						break label_11;
					}
					c = this.parseCEffect(m);
					and.add(c);
				}
			this.jj_consume_token(CLOSE);
			{if (true) return and;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	final public Effect parseCEffect(Map m) throws ParseException {
		Effect p;
		p = this.parsePEffect(m);
		{if (true) return p;}
		throw new Error("Missing return statement in function");
	}

	final public Effect parsePEffect(Map m) throws ParseException {
		Literal p;
		ResourceOperator ro;
		if (this.jj_2_37(20)) {
			p = this.parseAtomicFormula(m, false);
			{if (true) return p;}
		} else if (this.jj_2_38(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(NOT);
			p = this.parseAtomicFormula(m, false);
			this.jj_consume_token(CLOSE);
			{if (true) return new NOT(p);}
		} else if (this.jj_2_39(20)) {
			ro = this.parseResourceOperator(m);
			{if (true) return ro;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse Metrics
	// ***************************************************


	// **********************************
	// *	Parse Function Definitions
	// **********************************
	final public void parseFunctionsDef() throws ParseException {
		TypedList tl;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(FUNCTIONS);
		label_12:
			while (true) {
				this.parseFunctionSkeleton();
				if (this.jj_2_40(20)) {
					;
				} else {
					break label_12;
				}
			}
		this.jj_consume_token(CLOSE);
	}

	final public void parseFunctionSkeleton() throws ParseException {
		FunctionSymbol fs;
		TypedList tl;
		this.jj_consume_token(OPEN);
		fs = this.parseFunctionSymbol();
		tl = this.parseTypedList();
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			Variable v =  new Variable(str);
			v.setType((Type)tl.types.get(str));
			fs.addVar(v);
		}
		UP.funcSymbols.add(fs);
		this.jj_consume_token(CLOSE);
	}

	final public FunctionSymbol parseFunctionSymbol() throws ParseException {
		Token t;
		t = this.jj_consume_token(NAME);
		FunctionSymbol fs = (FunctionSymbol) UP.funcSymbolMap.get(t.toString());
		if (fs == null)
		{
			fs = new FunctionSymbol(t.toString());
			UP. funcSymbolMap.put(t.toString(), fs);
		}
		{if (true) return fs;}
		throw new Error("Missing return statement in function");
	}

	// **********************************
	// *	Parse Function Comparators
	// **********************************
	final public BinaryComparator parseFComp(Map varMap) throws ParseException {
		Token t1;
		Function f1, f2;
		this.jj_consume_token(OPEN);
		t1 = this.jj_consume_token(BINARY_COMP);
		f1 = this.parseFExp(varMap);
		f2 = this.parseFExp(varMap);
		this.jj_consume_token(CLOSE);
		BinaryComparator bc = new BinaryComparator(t1.toString(), f1, f2);
		{if (true) return bc;}
		throw new Error("Missing return statement in function");
	}

	final public Function parseFExp(Map varMap) throws ParseException {
		Token t1;
		Function f1, f2;
		if (this.jj_2_41(20)) {
			t1 = this.jj_consume_token(NUMBER);
			{if (true) return new NumberFunction(Double.parseDouble(t1.toString()));}
		} else if (this.jj_2_42(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(BINARY_OP);
			f1 = this.parseFExp(varMap);
			f2 = this.parseFExp(varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), f1, f2);
			{if (true) return bf;}
		} else if (this.jj_2_43(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(TYPE_IDENT);
			f1 = this.parseFExp(varMap);
			f2 = this.parseFExp(varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), f1, f2);
			{if (true) return bf;}
		} else if (this.jj_2_44(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(TYPE_IDENT);
			f1 = this.parseFExp(varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), new NumberFunction(0), f1);
			{if (true) return bf;}
		} else if (this.jj_2_45(20)) {
			f1 = this.parseFHead(varMap);
			{if (true) return f1;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	final public NamedFunction parseFHead(Map varMap) throws ParseException {
		FunctionSymbol f;
		TypedList tl;
		if (this.jj_2_48(20)) {
			this.jj_consume_token(OPEN);
			f = this.parseFunctionSymbol();
			tl = this.parseTypedList();
			this.jj_consume_token(CLOSE);
			NamedFunction nf = new NamedFunction(f);
			Iterator it = tl.objects.iterator();
			while (it.hasNext())
			{
				String str = (String) it.next();
				Parameter o = null;
				if (varMap != null) o = (Parameter) varMap.get(str);
				if (o == null) o = (Parameter) UP.constantMap.get(str);
				if (o == null) o = (Parameter) UP.objectMap.get(str);
				nf.addParameter(o);
			}
			{if (true) return nf;}
		} else if (this.jj_2_49(20)) {
			if (this.jj_2_46(20)) {
				this.jj_consume_token(OPEN);
			} else {
				;
			}
			this.jj_consume_token(TOTAL_TIME);
			if (this.jj_2_47(20)) {
				this.jj_consume_token(CLOSE);
			} else {
				;
			}
			{if (true) return TotalTimeFunction.getInstance();}
		} else if (this.jj_2_50(20)) {
			f = this.parseFunctionSymbol();
			NamedFunction nf = new NamedFunction(f);
			{if (true) return nf;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	// **********************************
	// *	Parse Resource Operators
	// **********************************
	final public ResourceOperator parseResourceOperator(Map varMap) throws ParseException {
		Token t1;
		NamedFunction f1;
		Function f2;
		this.jj_consume_token(OPEN);
		t1 = this.jj_consume_token(ASSIGN_OP);
		f1 = this.parseFHead(varMap);
		f2 = this.parseFExp(varMap);
		this.jj_consume_token(CLOSE);
		{if (true) return new ResourceOperator(t1.toString(), f1, f2);}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse Temporal
	// ***************************************************

	// **********************************
	// *	Parse Durative Action
	// **********************************
	final public void parseDurActionDef() throws ParseException {
		UngroundDurativeAction a = new UngroundDurativeAction();
		TypedList tl;
		Map varMap = new Hashtable();
		this.jj_consume_token(OPEN);
		this.jj_consume_token(DURATIVE_ACTION);
		a.name = this.parseOperatorName();
		this.jj_consume_token(PARAMETERS);
		this.jj_consume_token(OPEN);
		tl = this.parseTypedList();
		this.jj_consume_token(CLOSE);
		UP.actions.add(a);
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			Variable v = new Variable(str);
			v.setType((Type) tl.types.get(str));
			a.params.add(v);
			varMap.put(str,v);
		}
		this.parseDurativeActionDefBody(a, varMap);
		a.makeInstants();
		this.jj_consume_token(CLOSE);
	}

	final public void parseDurativeActionDefBody(UngroundDurativeAction da, Map varMap) throws ParseException {
		DurationConstraint dc;
		this.jj_consume_token(DURATION);
		dc = this.parseDurationConstraint(da, varMap);
		da.durationConstraint = dc;
		this.jj_consume_token(CONDITION);
		this.parseDAGD(da, varMap);
		this.jj_consume_token(EFFECT);
		this.parseDAEffect(da, varMap);
	}

	// **********************************
	// *	Parse Durative Action Conditions
	// **********************************
	final public void parseDAGD(UngroundDurativeAction da, Map varMap) throws ParseException {
		if (this.jj_2_52(20)) {
			this.parseTimedGD(da, varMap);
		} else if (this.jj_2_53(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AND);
			label_13:
				while (true) {
					this.parseTimedGD(da, varMap);
					if (this.jj_2_51(20)) {
						;
					} else {
						break label_13;
					}
				}
			this.jj_consume_token(CLOSE);
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	final public void parseTimedGD(UngroundDurativeAction da, Map varMap) throws ParseException {
		Condition c;
		if (this.jj_2_54(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_START);
			c = this.parseGD(varMap, false);
			this.jj_consume_token(CLOSE);
			((AND) da.startCondition).add(c);
		} else if (this.jj_2_55(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_END);
			c = this.parseGD(varMap, false);
			this.jj_consume_token(CLOSE);
			((AND) da.endCondition).add(c);
		} else if (this.jj_2_56(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(OVER_ALL);
			c = this.parseGD(varMap, false);
			this.jj_consume_token(CLOSE);
			((AND) da.invariant).add(c);
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	// **********************************
	// *	Parse Duration
	// **********************************
	final public DurationConstraint parseDurationConstraint(UngroundDurativeAction da, Map varMap) throws ParseException {
		SimpleDurationConstraint sdc;
		DurationConstraint dc;
		if (this.jj_2_58(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AND);
			dc = new DurationConstraint();
			label_14:
				while (true) {
					sdc = this.parseSimpleDurationConstraint(da, varMap);
					dc.add(sdc);
					if (this.jj_2_57(20)) {
						;
					} else {
						break label_14;
					}
				}
			this.jj_consume_token(CLOSE);
			{if (true) return dc;}
		} else if (this.jj_2_59(20)) {
			sdc = this.parseSimpleDurationConstraint(da, varMap);
			{if (true) return sdc;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	final public SimpleDurationConstraint parseSimpleDurationConstraint(UngroundDurativeAction da, Map varMap) throws ParseException {
		int t;
		Function f;
		this.jj_consume_token(OPEN);
		t = this.parseDOp();
		this.jj_consume_token(DUR_VAR);
		f = this.parseFExp(varMap);
		this.jj_consume_token(CLOSE);
		SimpleDurationConstraint s = new SimpleDurationConstraint(da.duration, f, t);
		{if (true) return s;}
		throw new Error("Missing return statement in function");
	}

	final public int parseDOp() throws ParseException {
		Token t;
		if (this.jj_2_60(20)) {
			t = this.jj_consume_token(BINARY_COMP);
		} else if (this.jj_2_61(20)) {
			t = this.jj_consume_token(EQUALS);
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		int i = MetricSymbolStore.getType(t.toString());
		if (i == MetricSymbolStore.LESS_THAN) i = MetricSymbolStore.LESS_THAN_EQUAL;
		else if (i == MetricSymbolStore.GREATER_THAN) i = MetricSymbolStore.GREATER_THAN_EQUAL;
		{if (true) return i;}
		throw new Error("Missing return statement in function");
	}

	// **********************************
	// *	Parse Durative Action Effects
	// **********************************
	final public void parseDAEffect(UngroundDurativeAction da, Map varMap) throws ParseException {
		if (this.jj_2_63(20)) {
			this.parseTimedEffect(da, varMap);
		} else if (this.jj_2_64(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AND);
			label_15:
				while (true) {
					if (this.jj_2_62(20)) {
						;
					} else {
						break label_15;
					}
					this.parseDAEffect(da, varMap);
				}
			this.jj_consume_token(CLOSE);
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	final public void parseTimedEffect(UngroundDurativeAction da, Map varMap) throws ParseException {
		Effect e;
		if (this.jj_2_65(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_START);
			e = this.parseEffect(varMap);
			this.jj_consume_token(CLOSE);
			((AND)da.startEffect).add(e);
		} else if (this.jj_2_66(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_START);
			e = this.parseFAssignDA(da, varMap);
			this.jj_consume_token(CLOSE);
			((AND)da.startEffect).add(e);
		} else if (this.jj_2_67(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_END);
			e = this.parseEffect(varMap);
			this.jj_consume_token(CLOSE);
			((AND)da.endEffect).add(e);
		} else if (this.jj_2_68(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(AT_END);
			e = this.parseFAssignDA(da, varMap);
			this.jj_consume_token(CLOSE);
			((AND)da.endEffect).add(e);
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	final public ResourceOperator parseFAssignDA(UngroundDurativeAction da, Map varMap) throws ParseException {
		Token t1;
		NamedFunction f1;
		Function f2;
		this.jj_consume_token(OPEN);
		t1 = this.jj_consume_token(ASSIGN_OP);
		f1 = this.parseFHead(varMap);
		f2 = this.parseFExpDA(da,varMap);
		this.jj_consume_token(CLOSE);
		{if (true) return new ResourceOperator(t1.toString(), f1, f2);}
		throw new Error("Missing return statement in function");
	}

	final public Function parseFExpDA(UngroundDurativeAction da, Map varMap) throws ParseException {
		Token t1;
		Function f1, f2;
		if (this.jj_2_69(20)) {
			t1 = this.jj_consume_token(NUMBER);
			{if (true) return new NumberFunction(Double.parseDouble(t1.toString()));}
		} else if (this.jj_2_70(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(BINARY_OP);
			f1 = this.parseFExpDA(da, varMap);
			f2 = this.parseFExpDA(da, varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), f1, f2);
			{if (true) return bf;}
		} else if (this.jj_2_71(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(TYPE_IDENT);
			f1 = this.parseFExpDA(da, varMap);
			f2 = this.parseFExpDA(da, varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), f1, f2);
			{if (true) return bf;}
		} else if (this.jj_2_72(20)) {
			this.jj_consume_token(OPEN);
			t1 = this.jj_consume_token(TYPE_IDENT);
			f1 = this.parseFExpDA(da, varMap);
			this.jj_consume_token(CLOSE);
			BinaryFunction bf = new BinaryFunction(t1.toString(), new NumberFunction(0), f1);
			{if (true) return bf;}
		} else if (this.jj_2_73(20)) {
			this.jj_consume_token(DUR_VAR);
			{if (true) return da.duration;}
		} else if (this.jj_2_74(20)) {
			f1 = this.parseFExp(varMap);
			{if (true) return f1;}
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
		throw new Error("Missing return statement in function");
	}

	// ******************************************************************************
	// *																			*
	// * 							Parse the Problem File							*
	// *																			*
	// ******************************************************************************
	final public boolean parseProblem() throws ParseException {
		Token t, t2;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(DEFINE);
		this.jj_consume_token(OPEN);
		this.jj_consume_token(PROBLEM);
		t = this.jj_consume_token(NAME);
		this.jj_consume_token(CLOSE);
		this.jj_consume_token(OPEN);
		this.jj_consume_token(DOMAIN_LABEL);
		t2 = this.jj_consume_token(NAME);
		this.jj_consume_token(CLOSE);
		UP.ProblemName = t.toString();
		UP.ProblemDomainName = t2.toString();

		if (!UP.DomainName.toLowerCase().equals(t2.toString().toLowerCase())) {
			logger.warn(String.format("Warning Domain Name [%s] and Problem Name [%s] do not match.",
					UP.DomainName.toLowerCase(), t2.toString().toLowerCase()));
		}

		if (this.jj_2_75(20)) {
			this.parseRequireDef();
		} else {
			;
		}
		if (this.jj_2_76(20)) {
			this.parseObjectDeclaration();
		} else {
			;
		}
		this.parseInit();
		this.parseGoal();
		if (this.jj_2_77(20)) {
			this.parseMetric();
		} else {
			;
		}
		this.jj_consume_token(CLOSE);
		this.jj_consume_token(0);
		{if (true) return true;}
		throw new Error("Missing return statement in function");
	}

	// ***************************************************
	// *	Parse the objects
	// ***************************************************
	final public void parseObjectDeclaration() throws ParseException {
		TypedList tl;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(OBJECTS);
		tl = this.parseTypedList();
		this.jj_consume_token(CLOSE);
		Iterator it = tl.objects.iterator();
		while (it.hasNext())
		{
			String str = (String) it.next();
			PDDLObject o = new PDDLObject(str, (Type) tl.types.get(str));
			UP.objects.add(o);
			UP.objectMap.put(str, o);
		}
	}

	// ***************************************************
	// *	Parse the Initial State
	// ***************************************************
	final public void parseInit() throws ParseException {
		this.jj_consume_token(OPEN);
		this.jj_consume_token(INIT);
		label_16:
			while (true) {
				this.parseInitEl();
				if (this.jj_2_78(20)) {
					;
				} else {
					break label_16;
				}
			}
		this.jj_consume_token(CLOSE);
	}

	final public void parseInitEl() throws ParseException {
		Literal pp;
		NamedFunction nf;
		Token t1;
		if (this.jj_2_79(20)) {
			pp = this.parseLiteralName();
			UP.initial.add(pp);
		} else if (this.jj_2_80(20)) {
			this.jj_consume_token(OPEN);
			this.jj_consume_token(EQUALS);
			nf = this.parseFHead(null);
			t1 = this.jj_consume_token(NUMBER);
			this.jj_consume_token(CLOSE);
			UP.funcValues.put(nf, new BigDecimal(Double.parseDouble(t1.toString())));
		} else {
			this.jj_consume_token(-1);
			throw new ParseException();
		}
	}

	final public Literal parseLiteralName() throws ParseException {
		Literal pp;
		pp = this.parseAtomicFormula(UP.objectMap, true);
		{if (true) return pp;}
		throw new Error("Missing return statement in function");
	}

	// **********************************
	// *	Parse Goal
	// **********************************
	final public void parseGoal() throws ParseException {
		Condition e;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(GOAL);
		e = this.parseGD(UP.objectMap, true);
		this.jj_consume_token(CLOSE);
		UP.goal = (GroundCondition) e;
	}

	// **********************************
	// *	Parse Metric
	// **********************************
	final public void parseMetric() throws ParseException {
		int type;
		Function f1;
		this.jj_consume_token(OPEN);
		this.jj_consume_token(METRIC);
		type = this.parseOptimization();
		f1 = this.parseFExp(UP.objectMap);
		this.jj_consume_token(CLOSE);
		UP.metric = new Metric(type, f1);
	}

	final public int parseOptimization() throws ParseException {
		Token t1;
		t1 = this.jj_consume_token(OPTIMIZATION);
		if (t1.toString().equals("minimize")) {if (true) return Metric.MINIMIZE;}
		else if (t1.toString().equals("maximize")) {if (true) return Metric.MAXIMIZE;}
		else {if (true) return -1;}
		throw new Error("Missing return statement in function");
	}

	final private boolean jj_2_1(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_1(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(0, xla); }
	}

	final private boolean jj_2_2(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_2(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(1, xla); }
	}

	final private boolean jj_2_3(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_3(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(2, xla); }
	}

	final private boolean jj_2_4(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_4(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(3, xla); }
	}

	final private boolean jj_2_5(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_5(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(4, xla); }
	}

	final private boolean jj_2_6(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_6(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(5, xla); }
	}

	final private boolean jj_2_7(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_7(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(6, xla); }
	}

	final private boolean jj_2_8(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_8(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(7, xla); }
	}

	final private boolean jj_2_9(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_9(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(8, xla); }
	}

	final private boolean jj_2_10(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_10(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(9, xla); }
	}

	final private boolean jj_2_11(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_11(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(10, xla); }
	}

	final private boolean jj_2_12(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_12(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(11, xla); }
	}

	final private boolean jj_2_13(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_13(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(12, xla); }
	}

	final private boolean jj_2_14(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_14(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(13, xla); }
	}

	final private boolean jj_2_15(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_15(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(14, xla); }
	}

	final private boolean jj_2_16(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_16(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(15, xla); }
	}

	final private boolean jj_2_17(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_17(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(16, xla); }
	}

	final private boolean jj_2_18(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_18(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(17, xla); }
	}

	final private boolean jj_2_19(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_19(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(18, xla); }
	}

	final private boolean jj_2_20(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_20(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(19, xla); }
	}

	final private boolean jj_2_21(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_21(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(20, xla); }
	}

	final private boolean jj_2_22(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_22(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(21, xla); }
	}

	final private boolean jj_2_23(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_23(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(22, xla); }
	}

	final private boolean jj_2_24(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_24(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(23, xla); }
	}

	final private boolean jj_2_25(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_25(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(24, xla); }
	}

	final private boolean jj_2_26(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_26(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(25, xla); }
	}

	final private boolean jj_2_27(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_27(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(26, xla); }
	}

	final private boolean jj_2_28(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_28(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(27, xla); }
	}

	final private boolean jj_2_29(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_29(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(28, xla); }
	}

	final private boolean jj_2_30(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_30(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(29, xla); }
	}

	final private boolean jj_2_31(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_31(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(30, xla); }
	}

	final private boolean jj_2_32(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_32(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(31, xla); }
	}

	final private boolean jj_2_33(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_33(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(32, xla); }
	}

	final private boolean jj_2_34(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_34(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(33, xla); }
	}

	final private boolean jj_2_35(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_35(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(34, xla); }
	}

	final private boolean jj_2_36(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_36(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(35, xla); }
	}

	final private boolean jj_2_37(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_37(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(36, xla); }
	}

	final private boolean jj_2_38(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_38(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(37, xla); }
	}

	final private boolean jj_2_39(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_39(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(38, xla); }
	}

	final private boolean jj_2_40(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_40(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(39, xla); }
	}

	final private boolean jj_2_41(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_41(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(40, xla); }
	}

	final private boolean jj_2_42(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_42(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(41, xla); }
	}

	final private boolean jj_2_43(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_43(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(42, xla); }
	}

	final private boolean jj_2_44(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_44(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(43, xla); }
	}

	final private boolean jj_2_45(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_45(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(44, xla); }
	}

	final private boolean jj_2_46(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_46(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(45, xla); }
	}

	final private boolean jj_2_47(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_47(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(46, xla); }
	}

	final private boolean jj_2_48(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_48(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(47, xla); }
	}

	final private boolean jj_2_49(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_49(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(48, xla); }
	}

	final private boolean jj_2_50(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_50(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(49, xla); }
	}

	final private boolean jj_2_51(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_51(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(50, xla); }
	}

	final private boolean jj_2_52(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_52(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(51, xla); }
	}

	final private boolean jj_2_53(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_53(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(52, xla); }
	}

	final private boolean jj_2_54(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_54(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(53, xla); }
	}

	final private boolean jj_2_55(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_55(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(54, xla); }
	}

	final private boolean jj_2_56(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_56(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(55, xla); }
	}

	final private boolean jj_2_57(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_57(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(56, xla); }
	}

	final private boolean jj_2_58(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_58(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(57, xla); }
	}

	final private boolean jj_2_59(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_59(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(58, xla); }
	}

	final private boolean jj_2_60(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_60(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(59, xla); }
	}

	final private boolean jj_2_61(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_61(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(60, xla); }
	}

	final private boolean jj_2_62(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_62(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(61, xla); }
	}

	final private boolean jj_2_63(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_63(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(62, xla); }
	}

	final private boolean jj_2_64(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_64(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(63, xla); }
	}

	final private boolean jj_2_65(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_65(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(64, xla); }
	}

	final private boolean jj_2_66(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_66(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(65, xla); }
	}

	final private boolean jj_2_67(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_67(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(66, xla); }
	}

	final private boolean jj_2_68(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_68(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(67, xla); }
	}

	final private boolean jj_2_69(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_69(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(68, xla); }
	}

	final private boolean jj_2_70(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_70(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(69, xla); }
	}

	final private boolean jj_2_71(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_71(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(70, xla); }
	}

	final private boolean jj_2_72(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_72(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(71, xla); }
	}

	final private boolean jj_2_73(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_73(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(72, xla); }
	}

	final private boolean jj_2_74(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_74(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(73, xla); }
	}

	final private boolean jj_2_75(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_75(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(74, xla); }
	}

	final private boolean jj_2_76(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_76(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(75, xla); }
	}

	final private boolean jj_2_77(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_77(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(76, xla); }
	}

	final private boolean jj_2_78(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_78(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(77, xla); }
	}

	final private boolean jj_2_79(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_79(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(78, xla); }
	}

	final private boolean jj_2_80(int xla) {
		this.jj_la = xla; this.jj_lastpos = this.jj_scanpos = this.token;
		try { return !this.jj_3_80(); }
		catch(LookaheadSuccess ls) { return true; }
		finally { this.jj_save(79, xla); }
	}

	final private boolean jj_3R_48() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_79()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_80()) return true;
		}
		return false;
	}

	final private boolean jj_3_79() {
		if (this.jj_3R_49()) return true;
		return false;
	}

	final private boolean jj_3_53() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AND)) return true;
		Token xsp;
		if (this.jj_3_51()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_51()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_59() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_52()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_53()) return true;
		}
		return false;
	}

	final private boolean jj_3_52() {
		if (this.jj_3R_40()) return true;
		return false;
	}

	final private boolean jj_3_39() {
		if (this.jj_3R_35()) return true;
		return false;
	}

	final private boolean jj_3_38() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(NOT)) return true;
		if (this.jj_3R_32()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_55() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_37()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_38()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_39()) return true;
			}
		}
		return false;
	}

	final private boolean jj_3_37() {
		if (this.jj_3R_32()) return true;
		return false;
	}

	final private boolean jj_3R_54() {
		if (this.jj_scan_token(DURATION)) return true;
		if (this.jj_3R_58()) return true;
		if (this.jj_scan_token(CONDITION)) return true;
		if (this.jj_3R_59()) return true;
		if (this.jj_scan_token(EFFECT)) return true;
		if (this.jj_3R_42()) return true;
		return false;
	}

	final private boolean jj_3R_19() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(CONSTANTS)) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_34() {
		if (this.jj_3R_55()) return true;
		return false;
	}

	final private boolean jj_3_21() {
		if (this.jj_scan_token(VAR)) return true;
		return false;
	}

	final private boolean jj_3_36() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AND)) return true;
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_33()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_35() {
		if (this.jj_3R_34()) return true;
		return false;
	}

	final private boolean jj_3R_31() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_34()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_35()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_36()) return true;
			}
		}
		return false;
	}

	final private boolean jj_3_34() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_46() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(OBJECTS)) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_20() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3_19() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_20()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_21()) return true;
		}
		return false;
	}

	final private boolean jj_3R_50() {
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_19()) { this.jj_scanpos = xsp; break; }
		}
		return false;
	}

	final private boolean jj_3_17() {
		if (this.jj_scan_token(VAR)) return true;
		return false;
	}

	final private boolean jj_3_28() {
		if (this.jj_3R_30()) return true;
		return false;
	}

	final private boolean jj_3R_29() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(DURATIVE_ACTION)) return true;
		if (this.jj_3R_52()) return true;
		if (this.jj_scan_token(PARAMETERS)) return true;
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		if (this.jj_3R_54()) return true;
		return false;
	}

	final private boolean jj_3_77() {
		if (this.jj_3R_47()) return true;
		return false;
	}

	final private boolean jj_3_9() {
		if (this.jj_scan_token(NON_HANDLED_LABELS)) return true;
		return false;
	}

	final private boolean jj_3_76() {
		if (this.jj_3R_46()) return true;
		return false;
	}

	final private boolean jj_3_15() {
		if (this.jj_3R_24()) return true;
		return false;
	}

	final private boolean jj_3_16() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3_75() {
		if (this.jj_3R_17()) return true;
		return false;
	}

	final private boolean jj_3_18() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_16()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_17()) return true;
		}
		return false;
	}

	final private boolean jj_3_47() {
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_22() {
		Token xsp;
		if (this.jj_3_18()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_18()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_23()) return true;
		if (this.jj_3R_26()) return true;
		return false;
	}

	final private boolean jj_3R_26() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_22()) {
			this.jj_scanpos = xsp;
			if (this.jj_3R_50()) return true;
		}
		return false;
	}

	final private boolean jj_3R_35() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(ASSIGN_OP)) return true;
		if (this.jj_3R_38()) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_32() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_51()) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_25() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(EITHER)) return true;
		Token xsp;
		if (this.jj_3_15()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_15()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_32() {
		if (this.jj_3R_33()) return true;
		return false;
	}

	final private boolean jj_3_31() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AND)) return true;
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_28()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_74() {
		if (this.jj_3R_37()) return true;
		return false;
	}

	final private boolean jj_3_30() {
		if (this.jj_3R_32()) return true;
		return false;
	}

	final private boolean jj_3_46() {
		if (this.jj_scan_token(OPEN)) return true;
		return false;
	}

	final private boolean jj_3R_30() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_29()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_30()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_31()) {
					this.jj_scanpos = xsp;
					if (this.jj_3_32()) return true;
				}
			}
		}
		return false;
	}

	final private boolean jj_3_73() {
		if (this.jj_scan_token(DUR_VAR)) return true;
		return false;
	}

	final private boolean jj_3_29() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_50() {
		if (this.jj_3R_39()) return true;
		return false;
	}

	final private boolean jj_3_49() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_46()) this.jj_scanpos = xsp;
		if (this.jj_scan_token(TOTAL_TIME)) return true;
		xsp = this.jj_scanpos;
		if (this.jj_3_47()) this.jj_scanpos = xsp;
		return false;
	}

	final private boolean jj_3_72() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_71() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_24() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3_70() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(BINARY_OP)) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_45() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_69()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_70()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_71()) {
					this.jj_scanpos = xsp;
					if (this.jj_3_72()) {
						this.jj_scanpos = xsp;
						if (this.jj_3_73()) {
							this.jj_scanpos = xsp;
							if (this.jj_3_74()) return true;
						}
					}
				}
			}
		}
		return false;
	}

	final private boolean jj_3_69() {
		if (this.jj_scan_token(NUMBER)) return true;
		return false;
	}

	final private boolean jj_3R_38() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_48()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_49()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_50()) return true;
			}
		}
		return false;
	}

	final private boolean jj_3_48() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_39()) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_27() {
		if (this.jj_scan_token(EFFECT)) return true;
		if (this.jj_3R_31()) return true;
		return false;
	}

	final private boolean jj_3_26() {
		if (this.jj_scan_token(PRECONDITION)) return true;
		if (this.jj_3R_30()) return true;
		return false;
	}

	final private boolean jj_3R_53() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_26()) this.jj_scanpos = xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_27()) this.jj_scanpos = xsp;
		return false;
	}

	final private boolean jj_3_14() {
		if (this.jj_3R_25()) return true;
		return false;
	}

	final private boolean jj_3_13() {
		if (this.jj_3R_24()) return true;
		return false;
	}

	final private boolean jj_3R_23() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_13()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_14()) return true;
		}
		return false;
	}

	final private boolean jj_3_45() {
		if (this.jj_3R_38()) return true;
		return false;
	}

	final private boolean jj_3R_44() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(ASSIGN_OP)) return true;
		if (this.jj_3R_38()) return true;
		if (this.jj_3R_45()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_52() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3_44() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_12() {
		if (this.jj_3R_24()) return true;
		return false;
	}

	final private boolean jj_3_62() {
		if (this.jj_3R_42()) return true;
		return false;
	}

	final private boolean jj_3_43() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_8() {
		if (this.jj_scan_token(REQUIREMENT_LABELS)) return true;
		return false;
	}

	final private boolean jj_3_7() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_8()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_9()) return true;
		}
		return false;
	}

	final private boolean jj_3_68() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_END)) return true;
		if (this.jj_3R_44()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_67() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_END)) return true;
		if (this.jj_3R_31()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_66() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_START)) return true;
		if (this.jj_3R_44()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_43() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_65()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_66()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_67()) {
					this.jj_scanpos = xsp;
					if (this.jj_3_68()) return true;
				}
			}
		}
		return false;
	}

	final private boolean jj_3_42() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(BINARY_OP)) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_65() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_START)) return true;
		if (this.jj_3R_31()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_37() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_41()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_42()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_43()) {
					this.jj_scanpos = xsp;
					if (this.jj_3_44()) {
						this.jj_scanpos = xsp;
						if (this.jj_3_45()) return true;
					}
				}
			}
		}
		return false;
	}

	final private boolean jj_3_41() {
		if (this.jj_scan_token(NUMBER)) return true;
		return false;
	}

	final private boolean jj_3_11() {
		if (this.jj_3R_24()) return true;
		return false;
	}

	final private boolean jj_3_10() {
		Token xsp;
		if (this.jj_3_11()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_11()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(TYPE_IDENT)) return true;
		if (this.jj_3R_23()) return true;
		return false;
	}

	final private boolean jj_3_57() {
		if (this.jj_3R_41()) return true;
		return false;
	}

	final private boolean jj_3_61() {
		if (this.jj_scan_token(EQUALS)) return true;
		return false;
	}

	final private boolean jj_3_64() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AND)) return true;
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_62()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_42() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_63()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_64()) return true;
		}
		return false;
	}

	final private boolean jj_3_63() {
		if (this.jj_3R_43()) return true;
		return false;
	}

	final private boolean jj_3R_28() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(ACTION)) return true;
		if (this.jj_3R_52()) return true;
		if (this.jj_scan_token(PARAMETERS)) return true;
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		if (this.jj_3R_53()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_18() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(TYPES)) return true;
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_10()) { this.jj_scanpos = xsp; break; }
		}
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_12()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_33() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(BINARY_COMP)) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_25() {
		if (this.jj_3R_29()) return true;
		return false;
	}

	final private boolean jj_3R_22() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_24()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_25()) return true;
		}
		return false;
	}

	final private boolean jj_3R_17() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(REQUIREMENTS)) return true;
		Token xsp;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_7()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_24() {
		if (this.jj_3R_28()) return true;
		return false;
	}

	final private boolean jj_3R_57() {
		if (this.jj_scan_token(OPTIMIZATION)) return true;
		return false;
	}

	final private boolean jj_3_60() {
		if (this.jj_scan_token(BINARY_COMP)) return true;
		return false;
	}

	final private boolean jj_3R_56() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_60()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_61()) return true;
		}
		return false;
	}

	final private boolean jj_3R_47() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(METRIC)) return true;
		if (this.jj_3R_57()) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_6() {
		if (this.jj_3R_22()) return true;
		return false;
	}

	final private boolean jj_3_5() {
		if (this.jj_3R_21()) return true;
		return false;
	}

	final private boolean jj_3_4() {
		if (this.jj_3R_20()) return true;
		return false;
	}

	final private boolean jj_3R_41() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_56()) return true;
		if (this.jj_scan_token(DUR_VAR)) return true;
		if (this.jj_3R_37()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_3() {
		if (this.jj_3R_19()) return true;
		return false;
	}

	final private boolean jj_3_2() {
		if (this.jj_3R_18()) return true;
		return false;
	}

	final private boolean jj_3R_51() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3R_39() {
		if (this.jj_scan_token(NAME)) return true;
		return false;
	}

	final private boolean jj_3_1() {
		if (this.jj_3R_17()) return true;
		return false;
	}

	final private boolean jj_3_40() {
		if (this.jj_3R_36()) return true;
		return false;
	}

	final private boolean jj_3_59() {
		if (this.jj_3R_41()) return true;
		return false;
	}

	final private boolean jj_3_23() {
		if (this.jj_3R_27()) return true;
		return false;
	}

	final private boolean jj_3R_58() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_58()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_59()) return true;
		}
		return false;
	}

	final private boolean jj_3_58() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AND)) return true;
		Token xsp;
		if (this.jj_3_57()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_57()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_51() {
		if (this.jj_3R_40()) return true;
		return false;
	}

	final private boolean jj_3R_36() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_39()) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_27() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_3R_51()) return true;
		if (this.jj_3R_26()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_49() {
		if (this.jj_3R_32()) return true;
		return false;
	}

	final private boolean jj_3_56() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(OVER_ALL)) return true;
		if (this.jj_3R_30()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_55() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_END)) return true;
		if (this.jj_3R_30()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3R_40() {
		Token xsp;
		xsp = this.jj_scanpos;
		if (this.jj_3_54()) {
			this.jj_scanpos = xsp;
			if (this.jj_3_55()) {
				this.jj_scanpos = xsp;
				if (this.jj_3_56()) return true;
			}
		}
		return false;
	}

	final private boolean jj_3R_21() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(FUNCTIONS)) return true;
		Token xsp;
		if (this.jj_3_40()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_40()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_54() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(AT_START)) return true;
		if (this.jj_3R_30()) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_33() {
		if (this.jj_3R_34()) return true;
		return false;
	}

	final private boolean jj_3_80() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(EQUALS)) return true;
		if (this.jj_3R_38()) return true;
		if (this.jj_scan_token(NUMBER)) return true;
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	final private boolean jj_3_78() {
		if (this.jj_3R_48()) return true;
		return false;
	}

	final private boolean jj_3R_20() {
		if (this.jj_scan_token(OPEN)) return true;
		if (this.jj_scan_token(PREDICATES)) return true;
		Token xsp;
		if (this.jj_3_23()) return true;
		while (true) {
			xsp = this.jj_scanpos;
			if (this.jj_3_23()) { this.jj_scanpos = xsp; break; }
		}
		if (this.jj_scan_token(CLOSE)) return true;
		return false;
	}

	public PDDL21parserTokenManager token_source;
	SimpleCharStream jj_input_stream;
	public Token token, jj_nt;
	private int jj_ntk;
	private Token jj_scanpos, jj_lastpos;
	private int jj_la;
	public boolean lookingAhead = false;
	private boolean jj_semLA;
	private int jj_gen;
	final private int[] jj_la1 = new int[0];
	static private int[] jj_la1_0;
	static private int[] jj_la1_1;
	static {
		jj_la1_0();
		jj_la1_1();
	}
	private static void jj_la1_0() {
		jj_la1_0 = new int[] {};
	}
	private static void jj_la1_1() {
		jj_la1_1 = new int[] {};
	}
	final private JJCalls[] jj_2_rtns = new JJCalls[80];
	private boolean jj_rescan = false;
	private int jj_gc = 0;

	public PDDL21parser(java.io.InputStream stream) {
		this.jj_input_stream = new SimpleCharStream(stream, 1, 1);
		this.token_source = new PDDL21parserTokenManager(this.jj_input_stream);
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	public void ReInit(java.io.InputStream stream) {
		this.jj_input_stream.ReInit(stream, 1, 1);
		this.token_source.ReInit(this.jj_input_stream);
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	public PDDL21parser(java.io.Reader stream) {
		this.jj_input_stream = new SimpleCharStream(stream, 1, 1);
		this.token_source = new PDDL21parserTokenManager(this.jj_input_stream);
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	public void ReInit(java.io.Reader stream) {
		this.jj_input_stream.ReInit(stream, 1, 1);
		this.token_source.ReInit(this.jj_input_stream);
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	public PDDL21parser(PDDL21parserTokenManager tm) {
		this.token_source = tm;
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	public void ReInit(PDDL21parserTokenManager tm) {
		this.token_source = tm;
		this.token = new Token();
		this.jj_ntk = -1;
		this.jj_gen = 0;
		for (int i = 0; i < 0; i++) this.jj_la1[i] = -1;
		for (int i = 0; i < this.jj_2_rtns.length; i++) this.jj_2_rtns[i] = new JJCalls();
	}

	final private Token jj_consume_token(int kind) throws ParseException {
		Token oldToken;
		if ((oldToken = this.token).next != null) this.token = this.token.next;
		else this.token = this.token.next = this.token_source.getNextToken();
		this.jj_ntk = -1;
		if (this.token.kind == kind) {
			this.jj_gen++;
			if (++this.jj_gc > 100) {
				this.jj_gc = 0;
				for (int i = 0; i < this.jj_2_rtns.length; i++) {
					JJCalls c = this.jj_2_rtns[i];
					while (c != null) {
						if (c.gen < this.jj_gen) c.first = null;
						c = c.next;
					}
				}
			}
			return this.token;
		}
		this.token = oldToken;
		this.jj_kind = kind;
		throw this.generateParseException();
	}

	static private final class LookaheadSuccess extends java.lang.Error { }
	final private LookaheadSuccess jj_ls = new LookaheadSuccess();
	final private boolean jj_scan_token(int kind) {
		if (this.jj_scanpos == this.jj_lastpos) {
			this.jj_la--;
			if (this.jj_scanpos.next == null) {
				this.jj_lastpos = this.jj_scanpos = this.jj_scanpos.next = this.token_source.getNextToken();
			} else {
				this.jj_lastpos = this.jj_scanpos = this.jj_scanpos.next;
			}
		} else {
			this.jj_scanpos = this.jj_scanpos.next;
		}
		if (this.jj_rescan) {
			int i = 0; Token tok = this.token;
			while (tok != null && tok != this.jj_scanpos) { i++; tok = tok.next; }
			if (tok != null) this.jj_add_error_token(kind, i);
		}
		if (this.jj_scanpos.kind != kind) return true;
		if (this.jj_la == 0 && this.jj_scanpos == this.jj_lastpos) throw this.jj_ls;
		return false;
	}

	final public Token getNextToken() {
		if (this.token.next != null) this.token = this.token.next;
		else this.token = this.token.next = this.token_source.getNextToken();
		this.jj_ntk = -1;
		this.jj_gen++;
		return this.token;
	}

	final public Token getToken(int index) {
		Token t = this.lookingAhead ? this.jj_scanpos : this.token;
		for (int i = 0; i < index; i++) {
			if (t.next != null) t = t.next;
			else t = t.next = this.token_source.getNextToken();
		}
		return t;
	}

	final private int jj_ntk() {
		if ((this.jj_nt=this.token.next) == null)
			return (this.jj_ntk = (this.token.next=this.token_source.getNextToken()).kind);
		else
			return (this.jj_ntk = this.jj_nt.kind);
	}

	private java.util.Vector jj_expentries = new java.util.Vector();
	private int[] jj_expentry;
	private int jj_kind = -1;
	private int[] jj_lasttokens = new int[100];
	private int jj_endpos;

	private void jj_add_error_token(int kind, int pos) {
		if (pos >= 100) return;
		if (pos == this.jj_endpos + 1) {
			this.jj_lasttokens[this.jj_endpos++] = kind;
		} else if (this.jj_endpos != 0) {
			this.jj_expentry = new int[this.jj_endpos];
			for (int i = 0; i < this.jj_endpos; i++) {
				this.jj_expentry[i] = this.jj_lasttokens[i];
			}
			boolean exists = false;
			for (java.util.Enumeration e = this.jj_expentries.elements(); e.hasMoreElements();) {
				int[] oldentry = (int[])(e.nextElement());
				if (oldentry.length == this.jj_expentry.length) {
					exists = true;
					for (int i = 0; i < this.jj_expentry.length; i++) {
						if (oldentry[i] != this.jj_expentry[i]) {
							exists = false;
							break;
						}
					}
					if (exists) break;
				}
			}
			if (!exists) this.jj_expentries.addElement(this.jj_expentry);
			if (pos != 0) this.jj_lasttokens[(this.jj_endpos = pos) - 1] = kind;
		}
	}

	public ParseException generateParseException() {
		this.jj_expentries.removeAllElements();
		boolean[] la1tokens = new boolean[54];
		for (int i = 0; i < 54; i++) {
			la1tokens[i] = false;
		}
		if (this.jj_kind >= 0) {
			la1tokens[this.jj_kind] = true;
			this.jj_kind = -1;
		}
		for (int i = 0; i < 0; i++) {
			if (this.jj_la1[i] == this.jj_gen) {
				for (int j = 0; j < 32; j++) {
					if ((jj_la1_0[i] & (1<<j)) != 0) {
						la1tokens[j] = true;
					}
					if ((jj_la1_1[i] & (1<<j)) != 0) {
						la1tokens[32+j] = true;
					}
				}
			}
		}
		for (int i = 0; i < 54; i++) {
			if (la1tokens[i]) {
				this.jj_expentry = new int[1];
				this.jj_expentry[0] = i;
				this.jj_expentries.addElement(this.jj_expentry);
			}
		}
		this.jj_endpos = 0;
		this.jj_rescan_token();
		this.jj_add_error_token(0, 0);
		int[][] exptokseq = new int[this.jj_expentries.size()][];
		for (int i = 0; i < this.jj_expentries.size(); i++) {
			exptokseq[i] = (int[])this.jj_expentries.elementAt(i);
		}
		return new ParseException(this.token, exptokseq, tokenImage);
	}

	final public void enable_tracing() {
	}

	final public void disable_tracing() {
	}

	final private void jj_rescan_token() {
		this.jj_rescan = true;
		for (int i = 0; i < 80; i++) {
			JJCalls p = this.jj_2_rtns[i];
			do {
				if (p.gen > this.jj_gen) {
					this.jj_la = p.arg; this.jj_lastpos = this.jj_scanpos = p.first;
					switch (i) {
					case 0: this.jj_3_1(); break;
					case 1: this.jj_3_2(); break;
					case 2: this.jj_3_3(); break;
					case 3: this.jj_3_4(); break;
					case 4: this.jj_3_5(); break;
					case 5: this.jj_3_6(); break;
					case 6: this.jj_3_7(); break;
					case 7: this.jj_3_8(); break;
					case 8: this.jj_3_9(); break;
					case 9: this.jj_3_10(); break;
					case 10: this.jj_3_11(); break;
					case 11: this.jj_3_12(); break;
					case 12: this.jj_3_13(); break;
					case 13: this.jj_3_14(); break;
					case 14: this.jj_3_15(); break;
					case 15: this.jj_3_16(); break;
					case 16: this.jj_3_17(); break;
					case 17: this.jj_3_18(); break;
					case 18: this.jj_3_19(); break;
					case 19: this.jj_3_20(); break;
					case 20: this.jj_3_21(); break;
					case 21: this.jj_3_22(); break;
					case 22: this.jj_3_23(); break;
					case 23: this.jj_3_24(); break;
					case 24: this.jj_3_25(); break;
					case 25: this.jj_3_26(); break;
					case 26: this.jj_3_27(); break;
					case 27: this.jj_3_28(); break;
					case 28: this.jj_3_29(); break;
					case 29: this.jj_3_30(); break;
					case 30: this.jj_3_31(); break;
					case 31: this.jj_3_32(); break;
					case 32: this.jj_3_33(); break;
					case 33: this.jj_3_34(); break;
					case 34: this.jj_3_35(); break;
					case 35: this.jj_3_36(); break;
					case 36: this.jj_3_37(); break;
					case 37: this.jj_3_38(); break;
					case 38: this.jj_3_39(); break;
					case 39: this.jj_3_40(); break;
					case 40: this.jj_3_41(); break;
					case 41: this.jj_3_42(); break;
					case 42: this.jj_3_43(); break;
					case 43: this.jj_3_44(); break;
					case 44: this.jj_3_45(); break;
					case 45: this.jj_3_46(); break;
					case 46: this.jj_3_47(); break;
					case 47: this.jj_3_48(); break;
					case 48: this.jj_3_49(); break;
					case 49: this.jj_3_50(); break;
					case 50: this.jj_3_51(); break;
					case 51: this.jj_3_52(); break;
					case 52: this.jj_3_53(); break;
					case 53: this.jj_3_54(); break;
					case 54: this.jj_3_55(); break;
					case 55: this.jj_3_56(); break;
					case 56: this.jj_3_57(); break;
					case 57: this.jj_3_58(); break;
					case 58: this.jj_3_59(); break;
					case 59: this.jj_3_60(); break;
					case 60: this.jj_3_61(); break;
					case 61: this.jj_3_62(); break;
					case 62: this.jj_3_63(); break;
					case 63: this.jj_3_64(); break;
					case 64: this.jj_3_65(); break;
					case 65: this.jj_3_66(); break;
					case 66: this.jj_3_67(); break;
					case 67: this.jj_3_68(); break;
					case 68: this.jj_3_69(); break;
					case 69: this.jj_3_70(); break;
					case 70: this.jj_3_71(); break;
					case 71: this.jj_3_72(); break;
					case 72: this.jj_3_73(); break;
					case 73: this.jj_3_74(); break;
					case 74: this.jj_3_75(); break;
					case 75: this.jj_3_76(); break;
					case 76: this.jj_3_77(); break;
					case 77: this.jj_3_78(); break;
					case 78: this.jj_3_79(); break;
					case 79: this.jj_3_80(); break;
					}
				}
				p = p.next;
			} while (p != null);
		}
		this.jj_rescan = false;
	}

	final private void jj_save(int index, int xla) {
		JJCalls p = this.jj_2_rtns[index];
		while (p.gen > this.jj_gen) {
			if (p.next == null) { p = p.next = new JJCalls(); break; }
			p = p.next;
		}
		p.gen = this.jj_gen + xla - this.jj_la; p.first = this.token; p.arg = xla;
	}

	static final class JJCalls {
		int gen;
		Token first;
		int arg;
		JJCalls next;
	}

}
